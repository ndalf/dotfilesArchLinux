webpackJsonp([30],{2763:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(353),n(355),n(2764)},2764:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),c=this&&this.__assign||function(){return(c=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++){t=arguments[n];for(var c in t)Object.prototype.hasOwnProperty.call(t,c)&&(e[c]=t[c])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var r,i=n(353),s=n(355);!function(e){e.Skip="skip",e.Delta="delta"}(r||(r={}));var a;!function(e){e.Full="full",e.Delta="delta"}(a||(a={}));var u=function(e){function t(t,n,o,c,r,i,s,a,u,l,h,d,g,f,p,S,v,y,m){var C=e.call(this,s.valueFor(a.settings.names.middleTierConstants).newEndpointAddress,s,a,t,o,n,i,l)||this;return C.$http=t,C.$qNoApply=n,C.$q=o,C.$interval=c,C.$rootScope=r,C.authenticationService=i,C.settingsService=s,C.constants=a,C.loggingService=u,C.appStateService=l,C.contactsDatabase=h,C.identityService=g,C.utilityService=f,C.storageService=p,C.eventingService=S,C.pstnNumberService=v,C.peopleService=y,C.myUserPreferencesStore=m,C.logger=u.newLogger("ContactSyncService"),d.registerForMtma(C),C.initializeOnAppLaunchAndReinit("First Initialize"),C}return o(t,e),t.$inject=["$http","$qNoApply","$q","$interval","$rootScope","authenticationService","settingsService","constants","loggingService","appStateService","contactsDatabase","orchestrationService","identityService","utilityService","storageService","eventingService","pstnNumberService","peopleService","myUserPreferencesStore"],t.prototype.initializeOnAppLaunchAndReinit=function(e){this.logger.log("contactSyncService Initialize reason {0}",e),this.contactSyncServiceEnabled=this.settingsService.valueAsBoolean(this.constants.settings.names.enableContactSyncService),this.contactSyncRefreshIntervalInMinutes=this.settingsService.valueFor(this.constants.settings.names.contactSyncRefreshTimeoutInMinutes),this.contactSyncResetIntervalInDays=this.settingsService.valueFor(this.constants.settings.names.contactSyncResetIntervalInDays),this.contactSyncContactProcessingDelayInMs=this.settingsService.valueFor(this.constants.settings.names.contactSyncContactProcessingDelayInMs),this.configuredPageSize=this.settingsService.valueFor(this.constants.settings.names.contactSyncPageSize),this.contactSyncOrderOfPrecedence=this.settingsService.valueFor(this.constants.settings.names.contactSyncOrderOfPrecedence),this.contactSyncMinSearchStringSize=this.settingsService.valueFor(this.constants.settings.names.contactSyncMinSearchStringSize),this.enableTflSmsCreate=this.settingsService.valueAsBoolean(this.constants.settings.names.enableTflSmsCreate),this.enableChatWithNonTflUsers=this.settingsService.valueAsBoolean(this.constants.settings.names.enableChatWithNonTflUsers),this.tflSmsAllowedPhoneNumberRegionCodes=this.settingsService.valueFor(this.constants.settings.names.tflSmsAllowedPhoneNumberRegionCodes),this.isGuestUser=this.identityService.isGuestUserType(),this.initService()},t.prototype.cleanupOnAppTeardown=function(e){this.logger.log("contactSyncService onAppTeardown: reason = {0}",e),this.recurringContactSyncUpdateInterval&&(this.$interval.cancel(this.recurringContactSyncUpdateInterval),this.recurringContactSyncUpdateInterval=null),this.dbOpenPromise=void 0,this.syncProviders=void 0,this.contactSyncServiceEnabled=!1,this.contactSyncRefreshIntervalInMinutes=0,this.contactSyncResetIntervalInDays=0,this.contactSyncContactProcessingDelayInMs=0,this.contactSyncOrderOfPrecedence=void 0,this.contactSyncMinSearchStringSize=0,this.configuredPageSize=0,this.enableChatWithNonTflUsers=!1,this.enableTflSmsCreate=!1,this.tflSmsAllowedPhoneNumberRegionCodes=[],this.isGuestUser=!1},t.prototype.mtmaTelemetryIdentifier=function(){return"ContactSyncService"},t.prototype.openContactsDatabase=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.contactSyncService.openDatabase);return this.contactsDatabase.isOpen?(t.stop({message:"contactSync database already open"}),this.dbOpenPromise.resolve()):this.contactsDatabase.open().then(function(){t.stop(),e.dbOpenPromise.resolve()},function(){t.fail({error:"contactSync database failed to open"}),e.dbOpenPromise.reject()}),this.dbOpenPromise.promise},t.prototype.search=function(e,t,n){var o=this;if(!e)return this.$q.resolve([]);var c=(e=e.toLocaleLowerCase()).split(/(\s+)/).filter(function(e){return e.trim().length>0}),r=c.length>0?c[0]:"",i=c.length>1?c[c.length-1]:null,s=i&&i.length>r.length?i:r;if(s.length<this.contactSyncMinSearchStringSize)return this.logger.info("Search string too small, skipping the seach"),this.$q.resolve([]);var a=this.loggingService.newScenario(this.constants.scenarios.contactSyncService.search),u={source:n,stringLength:e.length,wordCount:c.length,mainWordStringLength:s.length,matches:0},l=function(e,t,n,c){return o.onDbOpenCompletion().then(function(){var c=e,r=c+"ï¿¿";return o.contactsDatabase.provider.getRangeWithCriteria(o.contactsDatabase.schema.stores.rawcontacts.name,n,function(e){var n=!1;if(t){var o=e.displayName.toLocaleLowerCase();t.forEach(function(e){n=n||!o.contains(e)})}return!(n||!e.phone&&!e.email)},c,r,!1,!1,!1,o.constants.contactSync.maxContactResultsFromCache,0).toNgPromise(o.$q)}).then(function(e){return e.results.map(function(e){return{cachedContact:e,priority:c}})}).catch(function(e){return o.logger.error("Search failed with "+e),u.error||(u.error=o.utilityService.getErrorLoggingString(e)),[]})},h=c.length>1?c:null,d=[];return d.push(l(s,h,this.contactsDatabase.schema.stores.rawcontacts.indexes.namePart1.name,1)),d.push(l(s,h,this.contactsDatabase.schema.stores.rawcontacts.indexes.namePart2.name,2)),h||d.push(l(s,null,this.contactsDatabase.schema.stores.rawcontacts.indexes.email.name,3)),this.$q.all(d).then(function(e){var t=[];return e.forEach(function(e){e.forEach(function(e){e.contactKey=e.cachedContact.displayName+":"+(e.cachedContact.email||e.cachedContact.phone),t.push(e)})}),t=_.sortBy(t,["priority"]),t=_.uniqBy(t,"contactKey"),u.matches=t.length,o.mapToUsersForInvite(t.map(function(e){return e.cachedContact}))}).then(function(e){return t?e.slice(0,t):e}).finally(function(){u.error?a.fail(u):a.stop(u)})},t.prototype.initService=function(){this.contactSyncServiceEnabled&&!this.isGuestUser?(this.dbOpenPromise=this.$q.defer(),this.initProviders(),this.syncContacts("contactSyncService_initService"),this.resetContactSyncUpdateInterval()):this.logger.info("Contact Syncing is not enabled")},t.prototype._getAuthHeaders=function(e,t,n){var o=this;return this.authenticationService.getAuthTokens().then(function(e){var t;return t={},t[o.constants.headers.tokens.authorization]="Bearer "+e,t})},t.prototype.syncContacts=function(e,t){var n=this;void 0===t&&(t=!1),this.logger.info("Starting sync cycle ("+(t?"forced full":"normal")+", from "+e+")");var o=this.$q.defer(),c=[];this.logger.info("Discovering sync sources");var r=this.syncProviders.map(function(e){return e.discoverSources().then(function(e){c.push.apply(c,e)}).catch(function(e){n.logger.error("Source discovery failed with "+e)})});return this.$q.all(r).then(function(){return n.logger.info("Reading local sync state"),n.getSyncStateFromDB()}).then(function(e){return n.logger.info("Calling sync worker"),n.syncWorker(e,c,t)}).then(function(){n.logger.info("Completed sync cycle"),n.syncProviders.forEach(function(e){e.syncCompleted()}),o.resolve()}).catch(function(e){n.logger.info("DB or Sync worker failed with "+e),o.reject(e)}),o.promise},t.prototype.initProviders=function(){this.syncProviders=[],this.syncProviders.push(new i.RoamingDeviceContactsSyncProvider(this.$http,this.$qNoApply,this.$q,this.$rootScope,this.authenticationService,this.settingsService,this.constants,this.loggingService,this.appStateService,this.utilityService,this.storageService,this.eventingService,this.myUserPreferencesStore)),this.syncProviders.push(new s.OutlookContactsSyncProvider(this.$q,this.authenticationService,this.settingsService,this.constants,this.loggingService))},t.prototype.resetContactSyncUpdateInterval=function(){var e=this;this.recurringContactSyncUpdateInterval&&(this.$interval.cancel(this.recurringContactSyncUpdateInterval),this.recurringContactSyncUpdateInterval=null),this.recurringContactSyncUpdateInterval=this.$interval(function(){e.syncContacts("contactSyncService_scheduledUpdate")},this.constants.timeInMiliseconds.minute*this.contactSyncRefreshIntervalInMinutes,0,!1)},t.prototype.onDbOpenCompletion=function(){return this.dbOpenPromise.promise},t.prototype.getAllSyncState=function(){var e=this,t=this.contactsDatabase.schema.stores.contactsyncinternaldata.name;return this.contactsDatabase.provider.getAll(t).toNgPromise(this.$q).then(function(n){return e.logger.info(t+" data: "+n.length+" items fetched from indexed db"),n}).catch(function(t){return e.logger.error("failed to get sync status from indexed db"),e.$q.reject(t)})},t.prototype.getSyncStateFromDB=function(){var e=this;return this.onDbOpenCompletion().then(function(){return e.getAllSyncState()})},t.prototype.syncWorker=function(e,t,n){var o=this,i=this.loggingService.newScenario(this.constants.scenarios.contactSyncService.syncWorker);this.logger.info("Starting sync worker ("+e.length+" local sources, "+t.length+" discovered sources)");var s=this.computePrecedenceOrder(t),a=function(e,t){return o.addOrUpdateSyncStateToDB(e).then(function(){return o.syncSource(e,s,t)})},u=function(e){return o.unsyncSource(e).then(function(){return o.deleteSyncStateFromDB(e)})},l=function(e,t,n){return u(e).then(function(){return a(t,n)})},h=function(i){if(i>=t.length)return o.$q.resolve();var u=null,d=t[i],g=e.findIndex(function(e){return d.sourceType==e.source&&d.accountId==e.accountId});if(void 0===g||g<0){var f="New sync source of type <"+d.sourceType+">";o.logger.info(f);var p={source:d.sourceType,accountId:d.accountId,isSyncAllowed:!0,connectedAccountId:d.connectedAccountId,currentSyncStatus:r.Skip,deltaToken:void 0,lastResetTimestamp:Date.now()};u=a(p,d.shouldSendToScd).then(function(){o.logger.info(f+": syncing completed.")}).catch(function(e){o.logger.info(f+": syncing failed with "+e+".")})}else{var S=e[g],v=!1;if((Date.now()-S.lastResetTimestamp)/o.constants.timeInMiliseconds.day>o.contactSyncResetIntervalInDays&&(v=!0),n||v||d.connectedAccountId!==S.connectedAccountId){var y="Existing sync source of type <"+d.sourceType+"> "+(n?"with forced full sync":v?"with scheduled full sync":"with mismatching connectedAccountId");o.logger.info(""+y);var m=c(c({},S),{connectedAccountId:d.connectedAccountId,lastResetTimestamp:Date.now()});u=l(S,m,d.shouldSendToScd).then(function(){o.logger.info(y+": syncing completed.")}).catch(function(e){o.logger.info(y+": syncing failed with "+e+".")})}else{var C="Existing sync source of type <"+d.sourceType+">";o.logger.info(""+C),u=o.syncSource(S,s,d.shouldSendToScd).then(function(){o.logger.info(C+": syncing completed.")}).catch(function(e){o.logger.info(C+": syncing failed with "+e+".")})}e.splice(g,1)}return u.then(function(){return h(i+1)})},d=function(t){if(t>=e.length)return o.$q.resolve();var n=e[t],c="Unsyncing Source of type <"+n.source+">";return o.logger.info(""+c),u(n).then(function(){o.logger.info(c+": completed.")}).catch(function(e){o.logger.info(c+": failed with "+e+".")}).then(function(){return d(t+1)})};return h(0).then(function(){return d(0)}).finally(function(){i.stop()})},t.prototype.syncSource=function(e,t,n){var o=this,i=this.$q.defer(),s=e.currentSyncStatus===r.Skip?"full":"delta";this.logger.info("Source of type <"+e.source+"> is in "+s+" mode");var u=this.loggingService.newScenario(this.constants.scenarios.contactSyncService.syncSource),l={sourceType:e.source,initialMode:s,pages:0},h=function(){var i=e.currentSyncStatus===r.Skip?e.deltaToken:void 0,s=e.currentSyncStatus===r.Delta?e.deltaToken:void 0;return o.performSyncPageRetrieval(e.source,e.accountId,e.connectedAccountId,o.configuredPageSize,n,i,s).then(function(t){return e.deltaToken&&t.scope===a.Full?(o.logger.warn("Source of type <"+e.source+"> switched to full syncing due to reset"),l.modeReset=!0,o.unsyncSource(e).then(function(){return e=c(c({},e),{currentSyncStatus:r.Skip,deltaToken:void 0,lastResetTimestamp:Date.now()}),o.addOrUpdateSyncStateToDB(e)}).then(function(){return t})):t}).then(function(n){return o.syncOnePage(e,n.contacts,t).then(function(){return n})}).then(function(t){var n=t.skipToken||t.deltaToken;return(e=c(c({},e),{deltaToken:n})).currentSyncStatus===r.Skip&&0===t.contacts.length&&(o.logger.info("Source of type <"+e.source+"> switched to delta syncing"),e.currentSyncStatus=r.Delta),0===t.contacts.length&&(e.lastSuccessTimestamp=Date.now()),o.addOrUpdateSyncStateToDB(e).then(function(){return 0===t.contacts.length})}).then(function(e){return o.$q.resolve(e)})},d=function(){h().then(function(e){e?(u.stop(l),i.resolve()):(l.pages++,setTimeout(function(){return d()}))}).catch(function(e){l.error=o.utilityService.getErrorLoggingString(e),u.fail(l),i.reject(e)})};return d(),i.promise},t.prototype.syncOnePage=function(e,t,n){var o=this,c=this.$q.defer(),r=new Set;t.forEach(function(e){r.add(e.id)});var i=function(e){var t;if(r.has(e.id)){var c=e.id,i=c+"~";t=o.deleteRawContactsRangeFromDB(o.contactsDatabase.schema.stores.rawcontacts.indexes.id.name,c,i),r.delete(e.id)}else t=o.$q.resolve();return t.then(function(){return e.isDeleted?o.$q.resolve():o.getRawContactFromDB(e.displayName,e.phone,e.email).then(function(t){if(!t||o.hasPrecedence(e.source,t.source,n)){var c=e.displayName.split(/(\s+)/).filter(function(e){return e.trim().length>0}),r=c.length>0?c[0].toLocaleLowerCase():null,i=c.length>1?c[c.length-1].toLocaleLowerCase():null;return o.addOrUpdateContactToDB({displayName:e.displayName,namePart1:r,namePart2:i,email:e.email,phone:e.phone,id:e.id,source:e.source})}return o.$q.resolve()})})},s=function(e){e>=t.length?c.resolve():i(t[e]).then(function(){setTimeout(function(){return s(e+1)},o.contactSyncContactProcessingDelayInMs)}).catch(function(e){c.reject(e)})};return s(0),c.promise},t.prototype.hasPrecedence=function(e,t,n){var o=n.indexOf(t);return o<0||o>n.indexOf(e)},t.prototype.computePrecedenceOrder=function(e){var t=this,n=this.contactSyncOrderOfPrecedence.map(function(e){return[]});e.forEach(function(e){var o=t.contactSyncOrderOfPrecedence.indexOf(e.sourceType);o>=0?n[o].push(e.accountId):t.logger.error("Unknown source type <"+e.sourceType+">")});var o=[];return n.forEach(function(e,n){e.sort(),e.forEach(function(e){o.push(t.compoundSourceAndAccountId(t.contactSyncOrderOfPrecedence[n],e))})}),o},t.prototype.unsyncSource=function(e){var t=this.compoundSourceAndAccountId(e.source,e.accountId),n=t+"~";return this.deleteRawContactsRangeFromDB(this.contactsDatabase.schema.stores.rawcontacts.indexes.source.name,t,n)},t.prototype.addOrUpdateSyncState=function(e){var t=this;return this.contactsDatabase.provider.put(this.contactsDatabase.schema.stores.contactsyncinternaldata.name,e).toNgPromise(this.$q).then(function(){t.logger.info("DB updated with the new sync state.")}).catch(function(e){return t.logger.error("DB error: {0}",e),t.$q.reject(e)})},t.prototype.addOrUpdateSyncStateToDB=function(e){var t=this;return this.onDbOpenCompletion().then(function(){return t.addOrUpdateSyncState(e)})},t.prototype.deleteSyncState=function(e){var t=this;return this.contactsDatabase.provider.remove(this.contactsDatabase.schema.stores.contactsyncinternaldata.name,[e.source,e.accountId]).toNgPromise(this.$q).then(function(){t.logger.info("DB updated with the deleted sync state.")}).catch(function(e){return t.logger.error("DB error: {0}",e),t.$q.reject(e)})},t.prototype.deleteSyncStateFromDB=function(e){var t=this;return this.onDbOpenCompletion().then(function(){return t.deleteSyncState(e)})},t.prototype.deleteRawContactsRange=function(e,t,n){var o=this;return this.contactsDatabase.provider.removeRange(this.contactsDatabase.schema.stores.rawcontacts.name,e,t,n,!1,!0).toNgPromise(this.$q).catch(function(e){return o.logger.error("DB error: {0}",e),o.$q.reject(e)})},t.prototype.deleteRawContactsRangeFromDB=function(e,t,n){var o=this;return this.onDbOpenCompletion().then(function(){return o.deleteRawContactsRange(e,t,n)})},t.prototype.getRawContact=function(e,t,n){var o=this;return this.contactsDatabase.provider.get(this.contactsDatabase.schema.stores.rawcontacts.name,[e,t,n]).toNgPromise(this.$q).catch(function(e){return o.logger.error("DB error: {0}",e),o.$q.reject(e)})},t.prototype.getRawContactFromDB=function(e,t,n){var o=this;return this.onDbOpenCompletion().then(function(){return o.getRawContact(e,t,n)})},t.prototype.addOrUpdateContact=function(e){var t=this;return this.contactsDatabase.provider.put(this.contactsDatabase.schema.stores.rawcontacts.name,e).toNgPromise(this.$q).catch(function(e){return t.logger.error("DB error: {0}",e),t.$q.reject(e)})},t.prototype.addOrUpdateContactToDB=function(e){var t=this;return this.onDbOpenCompletion().then(function(){return t.addOrUpdateContact(e)})},t.prototype.compoundSourceAndAccountId=function(e,t){return e+"|"+t},t.prototype.mapToUsersForInvite=function(e){var n,o=this;return this.peopleService.getMeMSAProfile("contactSyncService").then(function(e){n=e}).catch(function(){o.logger.warn("Failed to retrieve current user profile"),n=void 0}).then(function(){var c=[];return e.forEach(function(e){if(e.email)o.enableChatWithNonTflUsers&&!t.matchEmailAliasInMeProfile(e.email,n)&&c.push({id:""+o.constants.tflConstants.people.offNetwork.mriPrefixForEmail+e.email,displayName:e.displayName,description:e.email,email:e.email,source:e.source});else if(o.enableChatWithNonTflUsers||o.enableTflSmsCreate){var r=e.phone,i=o.pstnNumberService.formatPhoneNumber(r),s=(null===i||void 0===i?void 0:i.isValid)&&(null===i||void 0===i?void 0:i.normalized);if(s&&!t.matchPhoneAliasInMeProfile(s,n)){var a=(null===i||void 0===i?void 0:i.display)||r;o.enableTflSmsCreate&&o.tflSmsAllowedPhoneNumberRegionCodes&&!_.isEmpty(o.tflSmsAllowedPhoneNumberRegionCodes)&&o.pstnNumberService.isValidNumberForAnyRegion(s,o.tflSmsAllowedPhoneNumberRegionCodes)?c.push({id:""+o.constants.tflConstants.people.smsUnverified.mriPrefix+s,displayName:e.displayName,description:a,phone:s,source:e.source}):c.push({id:""+o.constants.tflConstants.people.offNetwork.mriPrefixForPhone+s,displayName:e.displayName,description:a,phone:s,source:e.source})}}}),c})},t.matchEmailAliasInMeProfile=function(e,t){var n=_.compact(t.emailsInfo);return!!(n&&n.length>0&&-1!==n.findIndex(function(t){return e===t.address||e.toLowerCase()===t.address.toLowerCase()}))},t.matchPhoneAliasInMeProfile=function(e,t){var n=_.compact(t.phonesInfo),o=e.startsWith("+")?e.substr(1):e;return!!(n&&n.length>0&&-1!==n.findIndex(function(e){return o===e.number}))},t.prototype.performSyncPageRetrieval=function(e,t,n,o,r,i,s){var a,u=this,l=this.$q.defer(),h=this.utilityService.generateUUID(),d=this.loggingService.newScenario(this.constants.scenarios.contactSyncService.getSyncPage),g=this.constants.urls.contacts.syncSource.get.replace("{source}",e).replace("{accountId}",t).replace("{connectedAccountId}",n).replace("{pageSize}",o.toString()).replace("toScd",r?"true":"false"),f=(a={},a[this.constants.headers.clientRequestId]=h,a[this.constants.headers.accept]=this.constants.headers.jsonContent,a);i&&(f.SkipToken=i),s&&(f.DeltaToken=s);var p={callType:this.constants.urls.contacts.syncSource.type,headers:f};return this.performApiGetDetailed(g,p).toNgPromise(this.$q).then(function(t){var n,o;if(t&&t.object){var r=t.object,i=(null===(n=r.contacts)||void 0===n?void 0:n.length)||0;u.logger.info("Retrieved "+i+" contact items."),d.stop({source:e,statusCode:t.statusCode,contactCount:i,clientRequestId:h}),r.contacts=null===(o=r.contacts)||void 0===o?void 0:o.map(function(e){var t;return c(c({},e),{displayName:e.displayName||"",phone:e.phone||"",email:(null===(t=e.email)||void 0===t?void 0:t.toLowerCase())||""})}),l.resolve(r)}else d.fail({source:e,statusCode:550,clientRequestId:h}),l.reject("Bad Response, response was empty")}).catch(function(t){d.fail({source:e,statusCode:t.statusCode,error:u.utilityService.getErrorLoggingString(t),clientRequestId:h}),l.reject(t)}),l.promise},t}(SkypeX.Services.GenericRestClient);t.ContactSyncService=u,angular.module("teamspace.contactSyncService",["teamspace.settingsService","teamspace.config","teamspace.loggingService","teamspace.constants","teamspace.pstnNumberService","teamspace.peopleService","skypeX.myUserPreferencesStore"]).service("contactSyncService",u)},353:function(e,t,n){"use strict";var o=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();Object.defineProperty(t,"__esModule",{value:!0});var c,r=n(354);!function(e){e[e.None=0]="None",e[e.NotificationNotNeeded=1]="NotificationNotNeeded",e[e.NotificationNeeded=2]="NotificationNeeded",e[e.NotificationAcknowledged=3]="NotificationAcknowledged"}(c||(c={}));var i=function(e){function t(t,n,o,r,i,s,a,u,l,h,d,g,f){var p=e.call(this,s.valueFor(a.settings.names.middleTierConstants).newEndpointAddress,s,a,t,o,n,i,l)||this;return p.$http=t,p.$qNoApply=n,p.$q=o,p.authenticationService=i,p.settingsService=s,p.constants=a,p.loggingService=u,p.appStateService=l,p.utilityService=h,p.storageService=d,p.eventingService=g,p.myUserPreferencesStore=f,p.stampValue="true",p.logger=u.newLogger("RoamingDeviceContactsSyncProvider"),p.enableDeviceContactsSyncedNotification=s.valueAsBoolean(a.settings.names.enableDeviceContactsSyncedNotification),p.enableDeviceContactsSyncedUserSetting=s.valueAsBoolean(a.settings.names.enableDeviceContactsSyncedUserSetting),g.$on(r,a.events.contactSync.notificationAck,function(){p.logger.info("Notification acknowledged"),p.setConsentState(c.NotificationAcknowledged)}),g.unsafeOnWithTenantScope(a.events.settings.updated,function(e,t){(s.checkIfSettingHasChanged(t,a.settings.names.enableDeviceContactsSyncedNotification)||s.checkIfSettingHasChanged(t,a.settings.names.enableDeviceContactsSyncedUserSetting))&&(p.enableDeviceContactsSyncedNotification=s.valueAsBoolean(a.settings.names.enableDeviceContactsSyncedNotification),p.enableDeviceContactsSyncedUserSetting=s.valueAsBoolean(a.settings.names.enableDeviceContactsSyncedUserSetting))}),p.logger.info("created"),p}return o(t,e),t.prototype.discoverSources=function(){var e,t=this,n=this.$q.defer();if(!this.settingsService.valueFor(this.constants.settings.names.enableRoamingDeviceContactsSyncing))return this.logger.info("Syncing is not enabled"),n.resolve([]),n.promise;var o=this.utilityService.generateUUID(),i=this.loggingService.newScenario(this.constants.scenarios.contactSyncService.roamingDeviceContacts.getFolders),s=this.constants.urls.contacts.roaming.folders.get,a={callType:this.constants.urls.contacts.roaming.folders.type,headers:(e={},e[this.constants.headers.clientRequestId]=o,e[this.constants.headers.accept]=this.constants.headers.jsonContent,e)};return this.performApiGetDetailed(s,a).toNgPromise(this.$q).then(function(e){if(e&&e.object&&e.object.value){var s=e.object,a=t.settingsService.valueFor(t.constants.settings.names.maxRoamingDeviceContactsFolders),u=s.value.sort(function(e,t){return e.deviceId<t.deviceId?-1:e.deviceId>t.deviceId?1:0}).slice(0,a).map(function(e){return{sourceType:r.SourceType.Device,accountId:e.deviceId,connectedAccountId:e.id,shouldSendToScd:!1}});if(t.logger.info("Retrieved "+s.value.length+" roaming contact folders, using "+u.length+"."),i.stop({statusCode:e.statusCode,folderCount:s.value.length,folderCountAllowed:u.length,clientRequestId:o}),t.enableDeviceContactsSyncedNotification){var l=t.getConsentState();l==c.None&&(u.length>0?(t.logger.info("First run with some sources found, we'll notify user"),l=c.NotificationNeeded):(t.logger.info("First run with no sources found"),l=c.NotificationNotNeeded),t.setConsentState(l))}n.resolve(u)}else i.fail({statusCode:550,clientRequestId:o}),n.reject("Bad Response, response was empty")}).catch(function(e){i.fail({statusCode:e.statusCode,error:t.utilityService.getErrorLoggingString(e),clientRequestId:o}),n.reject(e)}),n.promise},t.prototype.syncCompleted=function(){this.enableDeviceContactsSyncedNotification&&this.getConsentState()===c.NotificationNeeded&&(this.logger.info("Sync succeeded, notifying user"),this.eventingService.$emit(this.constants.events.contactSync.notification))},t.prototype._getAuthHeaders=function(e,t,n){var o=this;return this.authenticationService.getAuthTokens().then(function(e){var t;return t={},t[o.constants.headers.tokens.authorization]="Bearer "+e,t})},t.prototype.getConsentState=function(){var e;return this.enableDeviceContactsSyncedUserSetting&&(null===(e=this.myUserPreferencesStore.getUserPreferences())||void 0===e?void 0:e.deviceContactsSyncedShown)===this.stampValue?c.NotificationAcknowledged:this.storageService.get(this.constants.storageNames.contactSyncDeviceConsentState)||c.None},t.prototype.setConsentState=function(e){this.storageService.set(this.constants.storageNames.contactSyncDeviceConsentState,e),this.enableDeviceContactsSyncedUserSetting&&e===c.NotificationAcknowledged&&this.myUserPreferencesStore.setUserPreference(SkypeX.Services.MyUserPreferenceStorageKey.DeviceContactsSyncedShown,this.stampValue)},t}(SkypeX.Services.GenericRestClient);t.RoamingDeviceContactsSyncProvider=i},354:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});!function(e){e.Device="device",e.Outlook="outlook",e.Skype="skype",e.Google="google"}(t.SourceType||(t.SourceType={}))},355:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(354),c=function(){function e(e,t,n,o,c){this.$q=e,this.authenticationService=t,this.settingsService=n,this.constants=o,this.loggingService=c,this.logger=c.newLogger("OutlookContactsSyncProvider"),this.logger.info("created")}return e.prototype.discoverSources=function(){var e=this;return this.settingsService.valueFor(this.constants.settings.names.enableOutlookContactsSyncing)?this.authenticationService.getUserInformation().then(function(t){return e.logger.info("Using Outlook contacts syncing."),[{sourceType:o.SourceType.Outlook,accountId:t.userName,connectedAccountId:void 0,shouldSendToScd:!0}]}).catch(function(t){return e.$q.reject(t)}):(this.logger.info("Syncing is not enabled"),this.$q.resolve([]))},e.prototype.syncCompleted=function(){},e}();t.OutlookContactsSyncProvider=c}},[2763]);